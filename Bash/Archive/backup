#!/bin/bash
# Backup of user files for specified program
# Requires sudo to copy/delete program files and backups

# TODO:
# test to confirm working
# implement 2d array instead of case


# Static variables
DATE=$(date +"%Y-%m-%d")
PATH_BKUP=~/backup
PATH_PRG=/prg
PATH_TEMP=/temp
# Program info
PROGRAMS=(
   'apache2'
   'bash'
   'fail2ban'
   'mozilla'
   'ssh'
   'vim'
)
APACHE_FILES=(
   /etc/apache2
   /var/www
)
BASH_FILES=(
   ~/.bashrc
   ~/.bash_history
)
FAIL2BAN_FILES=(
   /etc/fail2ban
)
MOZILLA_FILES=(
   ~/.cache/mozilla
   ~/.mozilla
)
SSH_FILES=(
   ~/.ssh
   /etc/ssh
   /etc/sshd
   /etc/motd
   /etc/issue
   /etc/issue.net
)
VIM_FILES=(
   ~/.viminfo
   ~/.vimrc
)

# Start

# Get Input
echo "Enter a number:"
# Print all programs
ARRAY_SIZE=${#PROGRAMS[@]}
let "i=0"
while [ $i -ne $ARRAY_SIZE ]; do
   j=$i'. '
   j+=${PROGRAMS[$i]}
   echo $j
   let "i++"
done
read INDEX

# Determine selected program
PROGRAM=${PROGRAMS[$INDEX]}
# Decide which FILES array to use
case $INDEX in
   0)
      BACKUP=$APACHE_FILES
      ;;
   1)
      BACKUP=$BASH_FILES
      ;;
   2)
      BACKUP=$FAIL2BAN_FILES
      ;;
   3)
      BACKUP=$MOZILLA_FILES
      ;;
   4)
      BACKUP=$SSH_FILES
      ;;
   5)
      BACKUP=$VIM_FILES
      ;;
   *)
      echo "Error: '$INDEX' not a known program"
      exit
      ;;
esac
# Array size
ARRAY_SIZE=${#BACKUP[@]}
# Create vars
TAR=$PROGRAM
TAR+='_'
TAR+=$DATE.tar.gz
PATH_START=$PATH_BKUP$PATH_TEMP/$PROGRAM
PATH_END=$PATH_BKUP$PATH_PRG

echo $PATH_START
echo $PATH_END

# Ensure path exists
# Delete any existing temp backup
print $PATH_START
if [ -d "$PATH_START" ];
then
   sudo -E rm -r $PATH_START
   echo -e "Deleted existing directory"
fi
# Create dirs
mkdir -p $PATH_START
mkdir -p $PATH_END

# Backup files
# Loop through path array
let "i=0"
let "ARRAY_SIZE++"
while [ $i -ne $ARRAY_SIZE ]; do
   sudo -E cp -r -a ${BACKUP[$i]} $PATH_START
   let "i++"
done

# Compress to tarball
cd $PATH_BKUP$PATH_START
# if tarball exists
if [ -d "$TAR" ]
then
   rm $TAR
   echo -e "Deleted existing tar"
fi
# create tarball
sudo -E tar cpzf $PATH_END/$TAR $PROGRAM
# remove temp backup
#sudo -E rm -r $PATH_START

# Done
echo -e "Backed up to: $PATH_BKUP$PATH_PRG/$TAR"
