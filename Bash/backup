#!/bin/bash
# Backup of user files for specified program
# Requires sudo to copy/delete program files and backups

# TODO:
# test to confirm working
# implement 2d array instead of case


# Static variables
DATE=$(date +"%Y.%m.%d")
PATH_BKUP=~/backup
PATH_PRG=prg
# Program info
PROGRAMS=
{
    apache2
    ssh
    fail2ban
    vim
}
APACHE_FILES=
(
    /etc/$PROGRAM/
    /var/www/
)
SSH_FILES=
(
    /etc/$PROGRAM/
    /etc/sshd/
    ~/.ssh/etc/motd
    /etc/issue
    /etc/issue.net
)
FAIL2BAN_FILES=
(
    /etc/$PROGRAM/
)
VIM_FILES=
(
    ~/.vimrc
)

# Start
# Get Input
printf "Enter a number:\n1. apache2\n2. ssh\n3. fail2ban"
read INDEX
# Determine selected program
PROGRAM=${PROGRAMS[$INDEX]}
# Decide which FILES array to use
case $INDEX in
    1)
        BACKUP=$APACHE_FILES
        ;;
    2)
        BACKUP=$SSH_FILES
        ;;
    3)
        BACKUP=$FAIL2BAN_FILES
        ;;
    4)
        BACKUP=$VIM_FILES
    *)
        echo "Error: '$OPTION' not a known program"
        exit
        ;;
esac
# Array size
ARRAY_SIZE=${#BACKUP[@]}
# Tar name
TAR=$PROGRAM_$DATE.tar.gz

# Ensure path exists
# Delete any existing temp backup
if [ -d "$PATH_BKUP/$PATH_PRG/$DATE" ];
then
   sudo -E rm -r $PATH_BKUP/$PATH_PRG/$DATE
   echo -e "Deleted existing directory"
fi
# Create temp backup
mkdir -p $PATH_BKUP/$PATH_PRG/$DATE

# Backup files
# Loop through path array
let "i=0"
while [ $i -ne $ARRAY_SIZE ]; do
    sudo -E cp -a ${BACKUP[$i]} $PATH_BKUP/$PATH_PRG/$DATE
    let "i++"
done

# Compress to tarball
cd $PATH_BKUP/$PROGRAM
# if tarball exists
if [ -d "$TAR" ]
then
   rm $TAR
   echo -e "Deleted existing tar"
fi
# create tarball
sudo -E tar -cpzf $PATH_BKUP/$PATH_PRG/$TAR
# remove temp backup
sudo -E rm -r $PATH_BKUP/$PATH_PRG/$DATE

# Done
echo -e "Backed up to: $PATH_BKUP/$PATH_PRG/$TAR"

